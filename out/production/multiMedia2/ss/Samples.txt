// sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  // sample data (CSV)
1,cust1,Syria,true
2,cust2,Lebanon,false

// (Our language)
create table customer(id number, name string, Country string, is_marrid boolean) type "csv" path"C:\\myCustomers.csv"

// (java)
class customer{
    private double id;
    private String name;
    private String Country;
    private boolean is_marrid;

    private String path = "C:\\myCustomers.csv"

    private static List<customer> myCustomer;

    private List<customer> load(){
    // open csv file
    // for each line
        // tmpValues <- split line split(',')
        // id = tmpValues[0]
        // is_marrid = (bool)tmpValues[3]
        // myCustomer.add(new customer(){
        //     id = id
        // });

    }

    public List<customer> getData(){
        if(myCustomer == null){
            myCustomer = load()
        }
        return myCustomer
    }

}

// 

// (Our language)
create type address(Country string, City string)
create table Students (Name string, Birth string,address address)
create table faculty (FacultyName string, student student)

// (JSON)
{

    "Faculties": [
        {
            "FacultyName": "Damascus",
            "Students": [
                {
                    "Name": "Std1",
                    "Birth": "20200620",
                    "Address": {
                        "Country": "Syria", "City": "Damscus"
                    }
                }
            ]
        }
    ]
}  